name: HelloWorld-Release

on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    if: github.event_name != 'pull_request'
    runs-on: windows-latest
    
    steps:
    - name: checkout code
      id:   checkout-code
      uses: actions/checkout@v2

    - name: setup msbuild
      id:   setup-msbuild
      uses: microsoft/setup-msbuild@v1.0.1

    - name: build solution
      id:   build-solution
      if: success()
      run: msbuild /p:Configuration=Release HelloWorld.sln
      
    
    - name: create archive
      id:   create-archive
      if: success()
      run: 7z a .\HelloWorld.zip .\**\*.exe -r
      shell: cmd
      
    - name: create release
      id:   create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: upload release asset
      id:   upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: HelloWorld.zip
        asset_name: HelloWorld.zip
        asset_content_type: application/zip
